import { readFileSync, writeFile } from 'fs';
import { join } from 'path';

/*
  This file exists just to automatically edit some files periodically
  in order to trigger the watcher and see changes so that it doesn't have to be done manually
  Uncomment some code in fuse.ts to enable it.
*/

export function runUpdateSimulation(enable: boolean) {
  // Automatically modify a file every few seconds to trigger the watcher
  let number = 0;
  const triggerFile = join(__dirname, '../../@myorg/bar/src/watchtrigger.ts');
  console.log('trigger file:', triggerFile);
  function triggerWatcher() {
    number++;
    console.log('Updating ts file counter...', number);
    writeFile(
      triggerFile,
      `export const count = ${number}; // auto generated by ${__filename}, you can have this periodically incremented from there by uncommenting a line`,
      () => {
        if (enable) setTimeout(triggerWatcher, 5000);
      },
    );
  }
  triggerWatcher();

  if (enable) {
    // Automatically modify a package.json file to change its index
    // back and forth
    const barPackageJsonPath = join(__dirname, '../../@myorg/bar/package.json');
    const barPackageJson = JSON.parse(readFileSync(barPackageJsonPath, 'utf8'));
    function swapIndex() {
      barPackageJson['main'] = /2/.test(barPackageJson['main']) ? 'dist/index.js' : 'dist/index2.js';
      console.log('Swaping index to', barPackageJson['main'], '...');
      writeFile(barPackageJsonPath, JSON.stringify(barPackageJson, null, 2), () => {
        setTimeout(swapIndex, 5000);
      });
    }
    setTimeout(swapIndex, 3000);
  }
}
