import { createConfig } from './config';
import { IConfig } from './interfaces';
import { IAssembleContext, assembleContext } from './assemble_context';
import { ILogger, getLogger } from '../logging/logging';

export class Context {
  public assembleContext: IAssembleContext;
  public log: ILogger;

  constructor(public config: IConfig) {
    this.assembleContext = assembleContext(this);
    this.log = getLogger(config.logging);
  }
}

export function createContext(cfg?: IConfig) {
  return new Context(createConfig(cfg));
}
