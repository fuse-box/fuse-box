// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Es exports tests Default interop should export with interop 1`] = `
"var foo_1 = require(\\"./foo\\");
var foo_1d = __fuse.dt(foo_1);
exports.default = foo_1d.default;
"
`;

exports[`Es exports tests Default interop should export with interop 2`] = `
"var foo_1 = require(\\"./foo\\");
var foo_1d = __fuse.dt(foo_1);
exports.oi = foo_1d.default;
"
`;

exports[`Es exports tests Edge cases Overriden compiler reserved exports User defines a compiler reserved keywors "exports" 1`] = `
"var exports = {};
exports.foo = function () {};
module.exports.default = exports;
"
`;

exports[`Es exports tests Export default declaration Should export obj 1`] = `
"var core_1 = require(\\"@uirouter/core\\");
exports.core = core_1;
"
`;

exports[`Es exports tests Export default declaration should export a shorthand expression with import reference  1`] = `
"var some_package_1 = require(\\"some_package\\");
exports.default = {
  hey: some_package_1.default
};
"
`;

exports[`Es exports tests Export default declaration should export default  1`] = `
"const add = function () {};
exports.default = add;
"
`;

exports[`Es exports tests Export default declaration should export default (inverse order)  1`] = `
"exports.default = add;
function add() {}
"
`;

exports[`Es exports tests Export default declaration should export default (should play nicely with import)  1`] = `
"var some_1 = require(\\"./some\\");
exports.default = some_1.default;
"
`;

exports[`Es exports tests Export default declaration should export default class without a name 1`] = `
"class __DefaultExport__ {}
exports.default = __DefaultExport__;
"
`;

exports[`Es exports tests Export default declaration should export default function with a name 1`] = `
"console.log(foo);
function foo() {}
exports.default = foo;
"
`;

exports[`Es exports tests Export default declaration should export default function without a name 1`] = `
"function __DefaultExport__() {}
exports.default = __DefaultExport__;
"
`;

exports[`Es exports tests Export default declaration should export expression  1`] = `
"exports.default = {
  add: add
};
"
`;

exports[`Es exports tests Export default declaration should not replace the scope  1`] = `
"function hello() {
  console.log(add);
}
exports.default = add;
function add() {}
"
`;

exports[`Es exports tests Export from source should export 1 1`] = `
"var foo_1 = require(\\"./foo\\");
exports.name = foo_1.name;
"
`;

exports[`Es exports tests Export from source should export 1 with alias 1`] = `
"var foo_1 = require(\\"./foo\\");
exports.hey = foo_1.name;
"
`;

exports[`Es exports tests Export from source should export 2 vars 1`] = `
"var foo_1 = require(\\"./foo\\");
exports.oi = foo_1.oi;
exports.hey = foo_1.name;
"
`;

exports[`Es exports tests Export from source should export all 1`] = `
"Object.assign(exports, require(\\"./foo\\"));
"
`;

exports[`Es exports tests Export from source should export default 1`] = `
"var foo_1 = require(\\"./foo\\");
exports.default = foo_1.default;
"
`;

exports[`Es exports tests Export from source should handle shorhand 1`] = `
"var zipWith_js_1 = require(\\"./zipWith.js\\");
const foo = 1;
exports.default = {
  zipWith: zipWith_js_1.default,
  foo
};
"
`;

exports[`Es exports tests Export var with value should export a variable 1 1`] = `
"var Observable_1 = require(\\"../Observable\\");
var noop_1 = require(\\"../util/noop\\");
exports.NEVER = new Observable_1.Observable(noop_1.noop);
console.log(exports.NEVER);
"
`;

exports[`Es exports tests Export var with value should export a variable 1 2`] = `
"exports.a = function () {
  console.log(exports.Foo);
};
console.log(exports.a);
exports.Foo = {
  foo: \\"bar\\"
};
"
`;

exports[`Es exports tests Export var with value should respect locals within an anon function 1`] = `
"var TweenLite_js_1 = require(\\"./TweenLite.js\\");
some(function () {
  var TweenMax = {};
  TweenMax.version = \\"2.0.2\\";
  TweenMax.hey = \\"1\\";
  console.log(TweenMax);
  return TweenMax;
});
exports.Foo = TweenLite_js_1.globals.TweenMax;
"
`;

exports[`Es exports tests Export var with value should trace down all varaiables ignore assignements (local scope) 1`] = `
"exports.__assign = function () {
  exports.__assign = Object.assign || (function __assign() {});
  return exports.__assign.apply(this, arguments);
};
"
`;

exports[`Es exports tests Export var with value should trace down an undefined variable 1`] = `
"(function (FooBar) {})(exports.FooBar || (exports.FooBar = {}));
"
`;

exports[`Es exports tests Exports const should export constants 1`] = `
"exports.foo = 1;
exports.bar = 3;
"
`;

exports[`Es exports tests Exports const should export constants and avoid collision 1`] = `
"exports.foo = 1;
exports.bar = 3;
function test(foo) {
  console.log(foo);
}
"
`;

exports[`Es exports tests Exports const should export constants and use globally 1`] = `
"exports.foo = 1;
exports.bar = 3;
function test() {
  console.log(exports.foo);
}
"
`;

exports[`Es exports tests Mix import and export should export object with keys (import all) 1`] = `
"var stuff_1 = require(\\"./stuff\\");
exports.stuff = stuff_1;
"
`;

exports[`Es exports tests Mix import and export should export object with keys (import all) with alias 1`] = `
"var stuff_1 = require(\\"./stuff\\");
exports.oi = stuff_1;
"
`;

exports[`Es exports tests Mix import and export should export object with keys 1`] = `
"var stuff_1 = require(\\"./stuff\\");
exports.stuff = stuff_1.default;
"
`;

exports[`Es exports tests Object export / function/ class should export function 1`] = `
"function hello() {}
exports.hello = hello;
"
`;

exports[`Es exports tests Object export should export enum 1`] = `
"var Foo;
(function (Foo) {
  Foo[Foo[\\"Oi\\"] = 0] = \\"Oi\\"
})(Foo || (Foo = {}))
exports.Foo = Foo;
"
`;

exports[`Es exports tests Object export should export object with keys 1`] = `
"const name1 = 2;
const name2 = 3;
exports.name1 = name1;
exports.name2 = name2;
"
`;

exports[`Es exports tests Object export should export object with keys2 (late)  function 1`] = `
"function name1() {}
const name2 = 2;
exports.fun = name1;
exports.name2 = name2;
"
`;

exports[`Es exports tests Object export should export object with keys2 (late) 1 1`] = `
"const name1 = 1;
const name2 = 2;
exports.fun = name1;
exports.name2 = name2;
"
`;

exports[`Es exports tests Object export should export object with keys2 (late) 2 ( class ) 1`] = `
"console.log(1);
class MySuperClass {}
console.log(2);
exports.fun = MySuperClass;
"
`;

exports[`Es exports tests Object export should export object with keys2 (late) 2 ( function ) 1`] = `
"console.log(1);
function name1() {}
console.log(2);
exports.fun = name1;
"
`;

exports[`Es exports tests Object export should export object with keys2 (late) function reversed order 1`] = `
"function name1() {}
const name2 = 2;
exports.fun = name1;
exports.name2 = name2;
"
`;

exports[`Es exports tests Object export should export the same object with different names (multiple refs in the code) 1`] = `
"var AnimationDriver = (function () {
  function AnimationDriver() {}
  AnimationDriver.NOOP = new NoopAnimationDriver();
  return AnimationDriver;
})();
exports.AnimationDriver = AnimationDriver;
exports.ÉµAnimationDriver = AnimationDriver;
"
`;

exports[`Es exports tests Object export should export the same object with different names 1`] = `
"const foo = 1;
exports.foo = foo;
exports.foo1 = foo;
"
`;

exports[`Es exports tests export type should ignore export type" 1`] = `
"console.log(1);
"
`;

exports[`Es exports tests export type should remove empty export declaration" 1`] = `""`;

exports[`Es exports tests export typescript objects should remove export default interface 1`] = `
"alert(1);
"
`;

exports[`Es exports tests export typescript objects should remove interface 1`] = `
"alert(1);
"
`;

exports[`Es exports tests export typescript objects should remove type 1`] = `
"alert(2);
"
`;
